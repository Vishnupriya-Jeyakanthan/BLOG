{"ast":null,"code":"import Vue from 'vue';\nimport App from './App.vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nfunction authorizedAccess(account_holders) {\n  if (localStorage.getItem('authorizedAccess') === null || localStorage.getItem('authorizedAccess') === \"{}\") {\n    localStorage.setItem('authorizedAccess', JSON.stringify(authorizedAccess));\n  }\n  return JSON.parse(localStorage.getItem('authorizedAccess'));\n}\nconst store = new Vuex.Store({\n  state: {\n    a: authorizedAccess({})\n  },\n  mutations: {\n    setLogin(state, user) {\n      state.account_holders = authorizedAccess(user);\n    },\n    notauthorizedaccess(state) {\n      let delobj = {};\n      localStorage.setItem('authorizedAccess', JSON.stringify(delobj));\n      state.account_holders = delobj;\n    }\n  },\n  actions: {\n    getUser: ({\n      commit\n    }, user) => {\n      commit('setLogin', user);\n    },\n    logOut({\n      commit\n    }) {\n      commit('checkLogout');\n    }\n  },\n  getters: {\n    user(state) {\n      return state.user;\n    }\n  }\n});\nVue.config.productionTip = false;\nnew Vue({\n  store,\n  render: h => h(App)\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","Vuex","use","authorizedAccess","account_holders","localStorage","getItem","setItem","JSON","stringify","parse","store","Store","state","a","mutations","setLogin","user","notauthorizedaccess","delobj","actions","getUser","commit","logOut","getters","config","productionTip","render","h","$mount"],"sources":["/Users/vishnupriya/Documents/vue js/vue_day1/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\nfunction authorizedAccess(account_holders) {\n  if (localStorage.getItem('authorizedAccess') === null || localStorage.getItem('authorizedAccess') === \"{}\") {\n    localStorage.setItem('authorizedAccess', JSON.stringify(authorizedAccess))\n  }\n  return JSON.parse(localStorage.getItem('authorizedAccess'))\n\n}\n\nconst store = new Vuex.Store({\n  state: {\n    a: authorizedAccess({}),\n  },\n  mutations: {\n    setLogin(state, user) {\n      state.account_holders = authorizedAccess(user)\n    },\n    notauthorizedaccess(state) {\n      let delobj = {};\n      localStorage.setItem('authorizedAccess', JSON.stringify(delobj))\n      state.account_holders = delobj;\n    }\n  },\n  actions: {\n    getUser: ({ commit }, user) => {\n      commit('setLogin', user)\n    },\n    logOut({ commit }) {\n      commit('checkLogout')\n    }\n\n  },\n  getters: {\n    user(state) {\n      return state.user;\n    }\n  }\n})\n\nVue.config.productionTip = false\n\nnew Vue({\n  store,\n  render: h => h(App),\n}).$mount('#app')"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,IAAI,MAAM,MAAM;AAEvBF,GAAG,CAACG,GAAG,CAACD,IAAI,CAAC;AACb,SAASE,gBAAgB,CAACC,eAAe,EAAE;EACzC,IAAIC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,KAAK,IAAI,IAAID,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,KAAK,IAAI,EAAE;IAC1GD,YAAY,CAACE,OAAO,CAAC,kBAAkB,EAAEC,IAAI,CAACC,SAAS,CAACN,gBAAgB,CAAC,CAAC;EAC5E;EACA,OAAOK,IAAI,CAACE,KAAK,CAACL,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAE7D;AAEA,MAAMK,KAAK,GAAG,IAAIV,IAAI,CAACW,KAAK,CAAC;EAC3BC,KAAK,EAAE;IACLC,CAAC,EAAEX,gBAAgB,CAAC,CAAC,CAAC;EACxB,CAAC;EACDY,SAAS,EAAE;IACTC,QAAQ,CAACH,KAAK,EAAEI,IAAI,EAAE;MACpBJ,KAAK,CAACT,eAAe,GAAGD,gBAAgB,CAACc,IAAI,CAAC;IAChD,CAAC;IACDC,mBAAmB,CAACL,KAAK,EAAE;MACzB,IAAIM,MAAM,GAAG,CAAC,CAAC;MACfd,YAAY,CAACE,OAAO,CAAC,kBAAkB,EAAEC,IAAI,CAACC,SAAS,CAACU,MAAM,CAAC,CAAC;MAChEN,KAAK,CAACT,eAAe,GAAGe,MAAM;IAChC;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,OAAO,EAAE,CAAC;MAAEC;IAAO,CAAC,EAAEL,IAAI,KAAK;MAC7BK,MAAM,CAAC,UAAU,EAAEL,IAAI,CAAC;IAC1B,CAAC;IACDM,MAAM,CAAC;MAAED;IAAO,CAAC,EAAE;MACjBA,MAAM,CAAC,aAAa,CAAC;IACvB;EAEF,CAAC;EACDE,OAAO,EAAE;IACPP,IAAI,CAACJ,KAAK,EAAE;MACV,OAAOA,KAAK,CAACI,IAAI;IACnB;EACF;AACF,CAAC,CAAC;AAEFlB,GAAG,CAAC0B,MAAM,CAACC,aAAa,GAAG,KAAK;AAEhC,IAAI3B,GAAG,CAAC;EACNY,KAAK;EACLgB,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAAC5B,GAAG;AACpB,CAAC,CAAC,CAAC6B,MAAM,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}