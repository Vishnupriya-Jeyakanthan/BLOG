{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  state: {\n    cartItems: [],\n    placedOrders: []\n    // count:  1\n  },\n\n  mutations: {\n    setcartitems(state, details) {\n      state.cartItems.push(details);\n    },\n    removeProductFromCart(state, details) {\n      state.cartItems.splice(details, 1);\n    },\n    placedOrders(state) {\n      state.placedOrders = state.cartItems;\n      state.cartItems = [];\n    },\n    incrprodcnt(state) {\n      state.count++;\n    }\n\n    //------------------------------\n    // incritem(state,index1)\n    // {\n    //    if( state.cartItems[index1].count >=1)\n    //     {\n    //         state.count++\n    //     }\n    // },\n    // decritem(state,index2)\n    // {\n    //     if(state.cartItems[index2].count >=1)\n    //     {\n    //         state.count--\n    //     }\n    // }\n\n    //--------------------------------------\n    // incrsItemQuantity(state,product)\n    // {\n    //     let index = state.cartItems.findIndex(item => item.id == product.id);\n    //     state.cartItems[index].quantity = parseInt(state.cartItems[index].quantity) + parseInt(product.quantity);\n    // }\n    // decrprodcnt(state,id)\n    // {\n    //     state.cartItems.product.id--\n    // }\n  },\n\n  getters: {\n    getCartItems(state) {\n      return state.cartItems;\n    },\n    getPlacedOrders(state) {\n      return state.placedOrders;\n    }\n    // getincrprodcnt(state)\n    // {\n    //     return state.count\n    // },\n    // getdecrprodcnt(state)\n    // {\n    //     return state.count\n    // }\n  },\n\n  actions: {\n    UPDATE_PRODUCTS_FROM_CART({\n      commit\n    }, productsAdded) {\n      commit('setcartitems', productsAdded);\n    },\n    REMOVE_PRODUCTS_FROM_CART({\n      commit\n    }, payload) {\n      commit('removeProductFromCart', payload);\n    },\n    // INC_PROD_UPDT({commit},index1)\n    // {\n    //     commit('incritem',index1)\n    // },\n    // DEC_PROD_UPDT({commit},index2)\n    // {\n    //     commit('decritem',index2)\n    // }\n    INC_PROD_UPDT({\n      commit\n    }, objpresent) {\n      commit('incrprodcnt', objpresent);\n    },\n    DEC_PROD_UPDT({\n      commit\n    }, payload) {\n      commit('decrprodcnt', payload);\n    }\n  },\n  namespaced: true\n};","map":{"version":3,"names":["state","cartItems","placedOrders","mutations","setcartitems","details","push","removeProductFromCart","splice","incrprodcnt","count","getters","getCartItems","getPlacedOrders","actions","UPDATE_PRODUCTS_FROM_CART","commit","productsAdded","REMOVE_PRODUCTS_FROM_CART","payload","INC_PROD_UPDT","objpresent","DEC_PROD_UPDT","namespaced"],"sources":["/Users/vishnupriya/Documents/vue js/vue_day1/src/components/store/cartstore.js"],"sourcesContent":["export default{\n    state:{\n        cartItems:[],\n        placedOrders:[] ,\n        // count:  1\n    },\n    mutations:{\n            setcartitems(state,details)\n            {\n                state.cartItems.push(details)\n            },\n            removeProductFromCart(state,details)\n            {    \n                    state.cartItems.splice(details, 1);\n            },\n            placedOrders(state)\n            {\n                state.placedOrders = state.cartItems\n                state.cartItems = []\n            },\n            incrprodcnt(state)\n            {\n                state.count++\n            },\n\n\n\n\n            //------------------------------\n            // incritem(state,index1)\n            // {\n            //    if( state.cartItems[index1].count >=1)\n            //     {\n            //         state.count++\n            //     }\n            // },\n            // decritem(state,index2)\n            // {\n            //     if(state.cartItems[index2].count >=1)\n            //     {\n            //         state.count--\n            //     }\n            // }\n\n\n\n\n            //--------------------------------------\n            // incrsItemQuantity(state,product)\n            // {\n            //     let index = state.cartItems.findIndex(item => item.id == product.id);\n            //     state.cartItems[index].quantity = parseInt(state.cartItems[index].quantity) + parseInt(product.quantity);\n            // }\n            // decrprodcnt(state,id)\n            // {\n            //     state.cartItems.product.id--\n            // }\n        },\n    getters:{\n            getCartItems(state)\n            {\n                return state.cartItems\n            },\n            getPlacedOrders(state)\n            {\n                return state.placedOrders\n            },\n            // getincrprodcnt(state)\n            // {\n            //     return state.count\n            // },\n            // getdecrprodcnt(state)\n            // {\n            //     return state.count\n            // }\n\n        },\n    actions:{\n        UPDATE_PRODUCTS_FROM_CART({commit}, productsAdded)\n        {\n            commit('setcartitems', productsAdded )\n        },\n        REMOVE_PRODUCTS_FROM_CART({commit},payload)\n        {\n            commit('removeProductFromCart',payload)\n\n        },\n\n        // INC_PROD_UPDT({commit},index1)\n        // {\n        //     commit('incritem',index1)\n        // },\n        // DEC_PROD_UPDT({commit},index2)\n        // {\n        //     commit('decritem',index2)\n        // }\n        INC_PROD_UPDT({commit},objpresent)\n        {\n            commit('incrprodcnt', objpresent)\n        },\n        DEC_PROD_UPDT({commit},payload)\n        {\n            commit('decrprodcnt', payload)\n        }\n    },\n    \n    namespaced: true\n\n    }"],"mappings":";AAAA,eAAc;EACVA,KAAK,EAAC;IACFC,SAAS,EAAC,EAAE;IACZC,YAAY,EAAC;IACb;EACJ,CAAC;;EACDC,SAAS,EAAC;IACFC,YAAY,CAACJ,KAAK,EAACK,OAAO,EAC1B;MACIL,KAAK,CAACC,SAAS,CAACK,IAAI,CAACD,OAAO,CAAC;IACjC,CAAC;IACDE,qBAAqB,CAACP,KAAK,EAACK,OAAO,EACnC;MACQL,KAAK,CAACC,SAAS,CAACO,MAAM,CAACH,OAAO,EAAE,CAAC,CAAC;IAC1C,CAAC;IACDH,YAAY,CAACF,KAAK,EAClB;MACIA,KAAK,CAACE,YAAY,GAAGF,KAAK,CAACC,SAAS;MACpCD,KAAK,CAACC,SAAS,GAAG,EAAE;IACxB,CAAC;IACDQ,WAAW,CAACT,KAAK,EACjB;MACIA,KAAK,CAACU,KAAK,EAAE;IACjB;;IAKA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAKA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;;EACLC,OAAO,EAAC;IACAC,YAAY,CAACZ,KAAK,EAClB;MACI,OAAOA,KAAK,CAACC,SAAS;IAC1B,CAAC;IACDY,eAAe,CAACb,KAAK,EACrB;MACI,OAAOA,KAAK,CAACE,YAAY;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAEJ,CAAC;;EACLY,OAAO,EAAC;IACJC,yBAAyB,CAAC;MAACC;IAAM,CAAC,EAAEC,aAAa,EACjD;MACID,MAAM,CAAC,cAAc,EAAEC,aAAa,CAAE;IAC1C,CAAC;IACDC,yBAAyB,CAAC;MAACF;IAAM,CAAC,EAACG,OAAO,EAC1C;MACIH,MAAM,CAAC,uBAAuB,EAACG,OAAO,CAAC;IAE3C,CAAC;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,aAAa,CAAC;MAACJ;IAAM,CAAC,EAACK,UAAU,EACjC;MACIL,MAAM,CAAC,aAAa,EAAEK,UAAU,CAAC;IACrC,CAAC;IACDC,aAAa,CAAC;MAACN;IAAM,CAAC,EAACG,OAAO,EAC9B;MACIH,MAAM,CAAC,aAAa,EAAEG,OAAO,CAAC;IAClC;EACJ,CAAC;EAEDI,UAAU,EAAE;AAEZ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}