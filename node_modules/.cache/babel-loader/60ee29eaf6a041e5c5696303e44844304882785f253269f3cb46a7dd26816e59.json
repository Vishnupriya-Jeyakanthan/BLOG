{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from \"vue\";\nexport default {\n  state: {\n    cartItems: [],\n    placedOrders: [],\n    cartcount: 1\n  },\n  mutations: {\n    setcartitems(state, details) {\n      state.cartItems.push(details);\n    },\n    removeProductFromCart(state, details) {\n      state.cartItems.splice(details, 1);\n    },\n    placedOrders(state) {\n      state.placedOrders = state.cartItems;\n      state.cartItems = [];\n    },\n    quantityUpdt(state, item) {\n      let found = state.cartItems.find(product => product.id == item.id);\n      if (found) {\n        found.quantity++;\n        found.totalPrice;\n      } else {\n        state.cartItems.push(item);\n        Vue.set(item, 'quantity', 1);\n      }\n    }\n  },\n  getters: {\n    getCartItems(state) {\n      return state.cartItems;\n    },\n    getPlacedOrders(state) {\n      return state.placedOrders;\n    },\n    getincrprodcnt(state) {\n      return state.count;\n    },\n    getdecrprodcnt(state) {\n      return state.count;\n    }\n  },\n  actions: {\n    UPDATE_PRODUCTS_FROM_CART({\n      commit\n    }, productsAdded) {\n      commit('setcartitems', productsAdded);\n    },\n    REMOVE_PRODUCTS_FROM_CART({\n      commit\n    }, payload) {\n      commit('removeProductFromCart', payload);\n    },\n    DELT_PRODUCTS_FROM_CART({\n      commit\n    }) {\n      commit('placedOrders');\n    },\n    QUANTITY_UPDATION({\n      commit\n    }, product) {\n      commit('quantityUpdt', product);\n    }\n    // DEC_PROD_UPDT({commit},objpresent)\n    // {\n    //     commit('decrprodcnt', objpresent)\n    // }\n  },\n\n  namespaced: true\n};","map":{"version":3,"names":["Vue","state","cartItems","placedOrders","cartcount","mutations","setcartitems","details","push","removeProductFromCart","splice","quantityUpdt","item","found","find","product","id","quantity","totalPrice","set","getters","getCartItems","getPlacedOrders","getincrprodcnt","count","getdecrprodcnt","actions","UPDATE_PRODUCTS_FROM_CART","commit","productsAdded","REMOVE_PRODUCTS_FROM_CART","payload","DELT_PRODUCTS_FROM_CART","QUANTITY_UPDATION","namespaced"],"sources":["/Users/vishnupriya/Documents/vue js/vue_day1/src/components/store/cartstore.js"],"sourcesContent":["import Vue from \"vue\";\n\nexport default{\n    state:{\n        cartItems:[],\n        placedOrders:[],\n        cartcount: 1 \n    },\n    mutations:{\n            setcartitems(state,details)\n            {\n                state.cartItems.push(details)\n            },\n            removeProductFromCart(state,details)\n            {    \n                state.cartItems.splice(details, 1);\n            },\n            placedOrders(state)\n            {\n                state.placedOrders = state.cartItems\n                state.cartItems = []\n            },\n            quantityUpdt(state, item)\n            {\n                let found = state.cartItems.find(product => product.id== item.id);\n\n                if(found)\n                {\n                    found.quantity ++;\n                    found.totalPrice\n                }\n                else{\n                    state.cartItems.push(item);\n                    Vue.set(item, 'quantity', 1);\n                    \n                }\n            },\n        },\n    getters:{\n        getCartItems(state)\n        {\n            return state.cartItems\n        },\n        getPlacedOrders(state)\n        {\n            return state.placedOrders\n        },\n        getincrprodcnt(state)\n        {\n            return state.count\n        },\n        getdecrprodcnt(state)\n        {\n            return state.count\n        }\n\n        },\n    actions:{\n        UPDATE_PRODUCTS_FROM_CART({commit}, productsAdded)\n        {\n            commit('setcartitems', productsAdded )\n        },\n        REMOVE_PRODUCTS_FROM_CART({commit},payload)\n        {\n            commit('removeProductFromCart',payload)\n\n        },\n        DELT_PRODUCTS_FROM_CART({commit})\n        {\n            commit ('placedOrders')\n        },\n        QUANTITY_UPDATION({commit}, product)\n        {\n            commit('quantityUpdt', product)\n        },\n        // DEC_PROD_UPDT({commit},objpresent)\n        // {\n        //     commit('decrprodcnt', objpresent)\n        // }\n\n\n    },\n    \n    namespaced: true\n\n    }"],"mappings":";AAAA,OAAOA,GAAG,MAAM,KAAK;AAErB,eAAc;EACVC,KAAK,EAAC;IACFC,SAAS,EAAC,EAAE;IACZC,YAAY,EAAC,EAAE;IACfC,SAAS,EAAE;EACf,CAAC;EACDC,SAAS,EAAC;IACFC,YAAY,CAACL,KAAK,EAACM,OAAO,EAC1B;MACIN,KAAK,CAACC,SAAS,CAACM,IAAI,CAACD,OAAO,CAAC;IACjC,CAAC;IACDE,qBAAqB,CAACR,KAAK,EAACM,OAAO,EACnC;MACIN,KAAK,CAACC,SAAS,CAACQ,MAAM,CAACH,OAAO,EAAE,CAAC,CAAC;IACtC,CAAC;IACDJ,YAAY,CAACF,KAAK,EAClB;MACIA,KAAK,CAACE,YAAY,GAAGF,KAAK,CAACC,SAAS;MACpCD,KAAK,CAACC,SAAS,GAAG,EAAE;IACxB,CAAC;IACDS,YAAY,CAACV,KAAK,EAAEW,IAAI,EACxB;MACI,IAAIC,KAAK,GAAGZ,KAAK,CAACC,SAAS,CAACY,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,IAAGJ,IAAI,CAACI,EAAE,CAAC;MAEjE,IAAGH,KAAK,EACR;QACIA,KAAK,CAACI,QAAQ,EAAG;QACjBJ,KAAK,CAACK,UAAU;MACpB,CAAC,MACG;QACAjB,KAAK,CAACC,SAAS,CAACM,IAAI,CAACI,IAAI,CAAC;QAC1BZ,GAAG,CAACmB,GAAG,CAACP,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;MAEhC;IACJ;EACJ,CAAC;EACLQ,OAAO,EAAC;IACJC,YAAY,CAACpB,KAAK,EAClB;MACI,OAAOA,KAAK,CAACC,SAAS;IAC1B,CAAC;IACDoB,eAAe,CAACrB,KAAK,EACrB;MACI,OAAOA,KAAK,CAACE,YAAY;IAC7B,CAAC;IACDoB,cAAc,CAACtB,KAAK,EACpB;MACI,OAAOA,KAAK,CAACuB,KAAK;IACtB,CAAC;IACDC,cAAc,CAACxB,KAAK,EACpB;MACI,OAAOA,KAAK,CAACuB,KAAK;IACtB;EAEA,CAAC;EACLE,OAAO,EAAC;IACJC,yBAAyB,CAAC;MAACC;IAAM,CAAC,EAAEC,aAAa,EACjD;MACID,MAAM,CAAC,cAAc,EAAEC,aAAa,CAAE;IAC1C,CAAC;IACDC,yBAAyB,CAAC;MAACF;IAAM,CAAC,EAACG,OAAO,EAC1C;MACIH,MAAM,CAAC,uBAAuB,EAACG,OAAO,CAAC;IAE3C,CAAC;IACDC,uBAAuB,CAAC;MAACJ;IAAM,CAAC,EAChC;MACIA,MAAM,CAAE,cAAc,CAAC;IAC3B,CAAC;IACDK,iBAAiB,CAAC;MAACL;IAAM,CAAC,EAAEb,OAAO,EACnC;MACIa,MAAM,CAAC,cAAc,EAAEb,OAAO,CAAC;IACnC;IACA;IACA;IACA;IACA;EAGJ,CAAC;;EAEDmB,UAAU,EAAE;AAEZ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}