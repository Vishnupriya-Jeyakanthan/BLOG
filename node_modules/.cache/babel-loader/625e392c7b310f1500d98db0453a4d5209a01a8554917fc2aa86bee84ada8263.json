{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import { axios } from \"vue/types/umd\"\nimport TagPage from \"../views/TagPage.vue\";\nimport Multiselect from 'vue-multiselect';\nimport axios from \"axios\";\nexport default {\n  name: \"SignUp\",\n  components: {\n    TagPage,\n    Multiselect\n  },\n  data() {\n    return {\n      UserDetails: {\n        userName: \"\",\n        password: \"\",\n        email: \"\",\n        jobPosition: \"\"\n      },\n      value: [],\n      // { name: 'Javascript', code: 'js' }\n      options: []\n    };\n  },\n  methods: {\n    addTag(newTag) {\n      const tag = {\n        name: newTag,\n        code: newTag.substring(0, 2) + Math.floor(Math.random() * 10000000)\n      };\n      this.options.push(tag);\n      this.value.push(tag);\n    },\n    async signup() {\n      console.log(this.UserDetails.userName, this.UserDetails.password, this.email, this.UserDetails.jobPosition);\n      let useradded = await axios.post(`/user/addUser`, this.UserDetails);\n      console.log(this.UserDetails.value);\n      if (this.UserDetails.value != \"\") {\n        localStorage.setItem(\"UserDetails\", JSON.stringify(useradded.data));\n        console.log(useradded);\n        alert(\"user-added-success\");\n        this.$router.push('/login');\n      }\n      console.log(useradded);\n      console.log(this.UserDetails);\n    },\n    clear() {\n      this.Email = \"\";\n      this.Password = \"\";\n    }\n  },\n  login() {\n    this.$router.push('/login');\n  }\n};\n// async signup()\n//  {\n//     let result = await axios.get(\"https://63d20c871780fd6ab9bd1092.mockapi.io/login\",\n//     {\n//         EmailId:this.EmailId,\n//         Password:this.Password,\n//         UserName:this.UserName\n//     });\n\n//     console.log(result);\n//  }","map":{"version":3,"names":["TagPage","Multiselect","axios","name","components","data","UserDetails","userName","password","email","jobPosition","value","options","methods","addTag","newTag","tag","code","substring","Math","floor","random","push","signup","console","log","useradded","post","localStorage","setItem","JSON","stringify","alert","$router","clear","Email","Password","login"],"sources":["/Users/vishnupriya/Documents/vue js/vue_day1/src/components/scripts/SignUp.js"],"sourcesContent":["// import { axios } from \"vue/types/umd\"\nimport TagPage from \"../views/TagPage.vue\"\nimport Multiselect from 'vue-multiselect'\nimport axios from \"axios\"\nexport default\n{\n    name:\"SignUp\",\n    components:{\n        TagPage,\n        Multiselect\n    },\n    data(){\n        return {\n            UserDetails:\n            {\n                userName:\"\",\n                password:\"\",\n                email:\"\",\n                jobPosition:\"\"\n            },\n            value: [],\n                // { name: 'Javascript', code: 'js' }\n              options: [\n                \n              ]\n        }\n    },\n    methods:{\n        addTag (newTag) {\n            const tag = {\n              name: newTag,\n              code: newTag.substring(0, 2) + Math.floor((Math.random() * 10000000))\n            }\n            this.options.push(tag)\n            this.value.push(tag)\n          },\n       async signup()\n        { \n            console.log(this.UserDetails.userName, this.UserDetails.password,this.email,this.UserDetails.jobPosition)\n            let useradded = await axios.post(`/user/addUser`,this.UserDetails)\n            console.log(this.UserDetails.value);\n            if(this.UserDetails.value!=\"\")\n            {\n                localStorage.setItem(\"UserDetails\",JSON.stringify(useradded.data));\n                console.log(useradded);\n                alert(\"user-added-success\")\n                this.$router.push('/login')\n            }\n            console.log(useradded);\n            console.log(this.UserDetails);\n        },\n        clear()\n        {\n            this.Email=\"\";\n            this.Password=\"\"\n        },            \n        },\n        login(){\n            this.$router.push('/login')\n        }\n    }\n        // async signup()\n        //  {\n        //     let result = await axios.get(\"https://63d20c871780fd6ab9bd1092.mockapi.io/login\",\n        //     {\n        //         EmailId:this.EmailId,\n        //         Password:this.Password,\n        //         UserName:this.UserName\n        //     });\n\n        //     console.log(result);\n        //  } \n"],"mappings":";AAAA;AACA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,WAAW,MAAM,iBAAiB;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,eACA;EACIC,IAAI,EAAC,QAAQ;EACbC,UAAU,EAAC;IACPJ,OAAO;IACPC;EACJ,CAAC;EACDI,IAAI,GAAE;IACF,OAAO;MACHC,WAAW,EACX;QACIC,QAAQ,EAAC,EAAE;QACXC,QAAQ,EAAC,EAAE;QACXC,KAAK,EAAC,EAAE;QACRC,WAAW,EAAC;MAChB,CAAC;MACDC,KAAK,EAAE,EAAE;MACL;MACFC,OAAO,EAAE;IAGf,CAAC;EACL,CAAC;EACDC,OAAO,EAAC;IACJC,MAAM,CAAEC,MAAM,EAAE;MACZ,MAAMC,GAAG,GAAG;QACVb,IAAI,EAAEY,MAAM;QACZE,IAAI,EAAEF,MAAM,CAACG,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,MAAM,EAAE,GAAG,QAAQ;MACrE,CAAC;MACD,IAAI,CAACT,OAAO,CAACU,IAAI,CAACN,GAAG,CAAC;MACtB,IAAI,CAACL,KAAK,CAACW,IAAI,CAACN,GAAG,CAAC;IACtB,CAAC;IACJ,MAAMO,MAAM,GACX;MACIC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnB,WAAW,CAACC,QAAQ,EAAE,IAAI,CAACD,WAAW,CAACE,QAAQ,EAAC,IAAI,CAACC,KAAK,EAAC,IAAI,CAACH,WAAW,CAACI,WAAW,CAAC;MACzG,IAAIgB,SAAS,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAAE,eAAc,EAAC,IAAI,CAACrB,WAAW,CAAC;MAClEkB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnB,WAAW,CAACK,KAAK,CAAC;MACnC,IAAG,IAAI,CAACL,WAAW,CAACK,KAAK,IAAE,EAAE,EAC7B;QACIiB,YAAY,CAACC,OAAO,CAAC,aAAa,EAACC,IAAI,CAACC,SAAS,CAACL,SAAS,CAACrB,IAAI,CAAC,CAAC;QAClEmB,OAAO,CAACC,GAAG,CAACC,SAAS,CAAC;QACtBM,KAAK,CAAC,oBAAoB,CAAC;QAC3B,IAAI,CAACC,OAAO,CAACX,IAAI,CAAC,QAAQ,CAAC;MAC/B;MACAE,OAAO,CAACC,GAAG,CAACC,SAAS,CAAC;MACtBF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnB,WAAW,CAAC;IACjC,CAAC;IACD4B,KAAK,GACL;MACI,IAAI,CAACC,KAAK,GAAC,EAAE;MACb,IAAI,CAACC,QAAQ,GAAC,EAAE;IACpB;EACA,CAAC;EACDC,KAAK,GAAE;IACH,IAAI,CAACJ,OAAO,CAACX,IAAI,CAAC,QAAQ,CAAC;EAC/B;AACJ,CAAC;AACG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}