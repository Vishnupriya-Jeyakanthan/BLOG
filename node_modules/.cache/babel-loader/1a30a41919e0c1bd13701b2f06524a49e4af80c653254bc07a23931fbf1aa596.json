{"ast":null,"code":"import Vue from 'vue';\nimport App from './App.vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nconst store = new Vuex.Store({\n  state: {\n    products: []\n  },\n  //this.$store used to acces but shouldnot use it instead use help methods like mutation. actions\n  mutations: {\n    setProducts(state, data) {\n      state.products = data;\n    },\n    updateProducts(state, data) {\n      state.products = data;\n    } //once website is opened the sdfe should make use of an API call t\n  },\n\n  actions: {\n    getProducts: ({\n      commit\n    }, {\n      success,\n      fail\n    }) => {\n      // fetch('xyz').then(res => {\n      commit('setProducts', [{\n        name: 'iphone',\n        brand: 'iphone',\n        price: 69999\n      }], success('Get product success callback'),\n      // })\n      // .catch(res => {\n      //   commit('setProducts', []),\n      fail('get product failure callback'));\n    }\n  },\n  updateProducts: ({\n    commit\n  }, products) => {\n    commit('updateProducts', products);\n  },\n  getters: {\n    products: state => state.products\n  }\n});\nVue.config.productionTip = false;\nVue.filter('capitalize', function (value) {\n  return value.toUpperCase();\n});\nnew Vue({\n  store,\n  render: h => h(App)\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","Vuex","use","store","Store","state","products","mutations","setProducts","data","updateProducts","actions","getProducts","commit","success","fail","name","brand","price","getters","config","productionTip","filter","value","toUpperCase","render","h","$mount"],"sources":["/Users/vishnupriya/Documents/vue js/vue_day1/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nconst store = new Vuex.Store({\n  state:{\n    products:[]\n  },\n  //this.$store used to acces but shouldnot use it instead use help methods like mutation. actions\n  mutations:{\n    setProducts(state,data){\n      state.products=data\n    },\n    updateProducts(state,data)\n    {\n      state.products=data\n    } //once website is opened the sdfe should make use of an API call t\n  },\nactions:{\n    getProducts:({commit},{success, fail}) =>{\n      // fetch('xyz').then(res => {\n        commit('setProducts', [{\n          name:'iphone',\n          brand:'iphone',\n          price:69999\n        }],\n        success('Get product success callback'),\n      // })\n      // .catch(res => {\n      //   commit('setProducts', []),\n        fail('get product failure callback'))\n      \n      }\n    },\n    updateProducts:({commit},products) => {\n      commit('updateProducts',products)\n    },\n  getters:{\n    products:state =>state.products \n  }\n\n})\n\n\nVue.config.productionTip = false\nVue.filter('capitalize',function(value)\n{\n  return value.toUpperCase()\n})\n\nnew Vue({\n  store,\n  render: h => h(App),\n}).$mount('#app')\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,IAAI,MAAM,MAAM;AAEvBF,GAAG,CAACG,GAAG,CAACD,IAAI,CAAC;AAEb,MAAME,KAAK,GAAG,IAAIF,IAAI,CAACG,KAAK,CAAC;EAC3BC,KAAK,EAAC;IACJC,QAAQ,EAAC;EACX,CAAC;EACD;EACAC,SAAS,EAAC;IACRC,WAAW,CAACH,KAAK,EAACI,IAAI,EAAC;MACrBJ,KAAK,CAACC,QAAQ,GAACG,IAAI;IACrB,CAAC;IACDC,cAAc,CAACL,KAAK,EAACI,IAAI,EACzB;MACEJ,KAAK,CAACC,QAAQ,GAACG,IAAI;IACrB,CAAC,CAAC;EACJ,CAAC;;EACHE,OAAO,EAAC;IACJC,WAAW,EAAC,CAAC;MAACC;IAAM,CAAC,EAAC;MAACC,OAAO;MAAEC;IAAI,CAAC,KAAI;MACvC;MACEF,MAAM,CAAC,aAAa,EAAE,CAAC;QACrBG,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAC,QAAQ;QACdC,KAAK,EAAC;MACR,CAAC,CAAC,EACFJ,OAAO,CAAC,8BAA8B,CAAC;MACzC;MACA;MACA;MACEC,IAAI,CAAC,8BAA8B,CAAC,CAAC;IAEvC;EACF,CAAC;EACDL,cAAc,EAAC,CAAC;IAACG;EAAM,CAAC,EAACP,QAAQ,KAAK;IACpCO,MAAM,CAAC,gBAAgB,EAACP,QAAQ,CAAC;EACnC,CAAC;EACHa,OAAO,EAAC;IACNb,QAAQ,EAACD,KAAK,IAAGA,KAAK,CAACC;EACzB;AAEF,CAAC,CAAC;AAGFP,GAAG,CAACqB,MAAM,CAACC,aAAa,GAAG,KAAK;AAChCtB,GAAG,CAACuB,MAAM,CAAC,YAAY,EAAC,UAASC,KAAK,EACtC;EACE,OAAOA,KAAK,CAACC,WAAW,EAAE;AAC5B,CAAC,CAAC;AAEF,IAAIzB,GAAG,CAAC;EACNI,KAAK;EACLsB,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAAC1B,GAAG;AACpB,CAAC,CAAC,CAAC2B,MAAM,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}