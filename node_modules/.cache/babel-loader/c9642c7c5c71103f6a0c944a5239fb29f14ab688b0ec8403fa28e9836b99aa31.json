{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from \"vue\";\nexport default {\n  state: {\n    cartItems: [],\n    placedOrders: [],\n    cartcount: 0\n  },\n  mutations: {\n    setcartitems(state, details) {\n      state.cartItems.push(details);\n    },\n    removeProductFromCart(state, details) {\n      state.cartItems.splice(details, 1);\n    },\n    placedOrders(state) {\n      state.placedOrders = state.cartItems;\n      state.cartItems = [];\n    },\n    setIncCount(state, index) {},\n    setDecCount(state, index) {}\n    // quantityUpdt(state, item)\n    // {\n    //     let found = state.cartItems.find(product => product.id== item.id);\n    //     if(found)\n    //     {\n    //         found.quantity ++;\n    //     }\n    //     else{\n    //         state.cartItems.push(item);\n    //         Vue.set(item, 'quantity', 1);\n    //     }\n    // },\n  },\n\n  getters: {\n    getCartItems(state) {\n      return state.cartItems;\n    },\n    getPlacedOrders(state) {\n      return state.placedOrders;\n    },\n    getincrprodcnt(state) {\n      return state.count;\n    },\n    getdecrprodcnt(state) {\n      return state.count;\n    }\n  },\n  actions: {\n    UPDATE_PRODUCTS_FROM_CART({\n      commit\n    }, productsAdded) {\n      commit('setcartitems', productsAdded);\n    },\n    REMOVE_PRODUCTS_FROM_CART({\n      commit\n    }, payload) {\n      commit('removeProductFromCart', payload);\n    },\n    DELT_PRODUCTS_FROM_CART({\n      commit\n    }) {\n      commit('placedOrders');\n    },\n    INCRE_QUANTITY({\n      commit\n    }, index) {\n      commit('setIncCount', index);\n    },\n    DECRE_QUANTITY({\n      commit\n    }, index) {\n      commit('setDecCount', index);\n    }\n  },\n  namespaced: true\n};","map":{"version":3,"names":["Vue","state","cartItems","placedOrders","cartcount","mutations","setcartitems","details","push","removeProductFromCart","splice","setIncCount","index","setDecCount","getters","getCartItems","getPlacedOrders","getincrprodcnt","count","getdecrprodcnt","actions","UPDATE_PRODUCTS_FROM_CART","commit","productsAdded","REMOVE_PRODUCTS_FROM_CART","payload","DELT_PRODUCTS_FROM_CART","INCRE_QUANTITY","DECRE_QUANTITY","namespaced"],"sources":["/Users/vishnupriya/Documents/vue js/vue_day1/src/components/store/cartstore.js"],"sourcesContent":["import Vue from \"vue\";\n\nexport default{\n    state:{\n        cartItems:[],\n        placedOrders:[],\n        cartcount: 0\n    },\n    mutations:{\n            setcartitems(state,details)\n            {\n                state.cartItems.push(details)\n            },\n            removeProductFromCart(state,details)\n            {    \n                state.cartItems.splice(details, 1);\n            },\n            placedOrders(state)\n            {\n                state.placedOrders = state.cartItems\n                state.cartItems = []\n            },\n            setIncCount(state,index)\n            {\n\n            },\n            setDecCount(state,index)\n            {\n                \n            }\n            // quantityUpdt(state, item)\n            // {\n            //     let found = state.cartItems.find(product => product.id== item.id);\n            //     if(found)\n            //     {\n            //         found.quantity ++;\n            //     }\n            //     else{\n            //         state.cartItems.push(item);\n            //         Vue.set(item, 'quantity', 1);\n            //     }\n            // },\n        },\n    getters:{\n        getCartItems(state)\n        {\n            return state.cartItems\n        },\n        getPlacedOrders(state)\n        {\n            return state.placedOrders\n        },\n        getincrprodcnt(state)\n        {\n            return state.count\n        },\n        getdecrprodcnt(state)\n        {\n            return state.count\n        }\n\n        },\n    actions:{\n        UPDATE_PRODUCTS_FROM_CART({commit}, productsAdded)\n        {\n            commit('setcartitems', productsAdded )\n        },\n        REMOVE_PRODUCTS_FROM_CART({commit},payload)\n        {\n            commit('removeProductFromCart',payload)\n\n        },\n        DELT_PRODUCTS_FROM_CART({commit})\n        {\n            commit ('placedOrders')\n        },\n       INCRE_QUANTITY({commit},index)\n       {\n        commit('setIncCount',index)\n\n       },\n       DECRE_QUANTITY({commit},index)\n       {\n        commit('setDecCount',index)\n       }\n    },\n    \n    namespaced: true\n\n    }"],"mappings":";AAAA,OAAOA,GAAG,MAAM,KAAK;AAErB,eAAc;EACVC,KAAK,EAAC;IACFC,SAAS,EAAC,EAAE;IACZC,YAAY,EAAC,EAAE;IACfC,SAAS,EAAE;EACf,CAAC;EACDC,SAAS,EAAC;IACFC,YAAY,CAACL,KAAK,EAACM,OAAO,EAC1B;MACIN,KAAK,CAACC,SAAS,CAACM,IAAI,CAACD,OAAO,CAAC;IACjC,CAAC;IACDE,qBAAqB,CAACR,KAAK,EAACM,OAAO,EACnC;MACIN,KAAK,CAACC,SAAS,CAACQ,MAAM,CAACH,OAAO,EAAE,CAAC,CAAC;IACtC,CAAC;IACDJ,YAAY,CAACF,KAAK,EAClB;MACIA,KAAK,CAACE,YAAY,GAAGF,KAAK,CAACC,SAAS;MACpCD,KAAK,CAACC,SAAS,GAAG,EAAE;IACxB,CAAC;IACDS,WAAW,CAACV,KAAK,EAACW,KAAK,EACvB,CAEA,CAAC;IACDC,WAAW,CAACZ,KAAK,EAACW,KAAK,EACvB,CAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;;EACLE,OAAO,EAAC;IACJC,YAAY,CAACd,KAAK,EAClB;MACI,OAAOA,KAAK,CAACC,SAAS;IAC1B,CAAC;IACDc,eAAe,CAACf,KAAK,EACrB;MACI,OAAOA,KAAK,CAACE,YAAY;IAC7B,CAAC;IACDc,cAAc,CAAChB,KAAK,EACpB;MACI,OAAOA,KAAK,CAACiB,KAAK;IACtB,CAAC;IACDC,cAAc,CAAClB,KAAK,EACpB;MACI,OAAOA,KAAK,CAACiB,KAAK;IACtB;EAEA,CAAC;EACLE,OAAO,EAAC;IACJC,yBAAyB,CAAC;MAACC;IAAM,CAAC,EAAEC,aAAa,EACjD;MACID,MAAM,CAAC,cAAc,EAAEC,aAAa,CAAE;IAC1C,CAAC;IACDC,yBAAyB,CAAC;MAACF;IAAM,CAAC,EAACG,OAAO,EAC1C;MACIH,MAAM,CAAC,uBAAuB,EAACG,OAAO,CAAC;IAE3C,CAAC;IACDC,uBAAuB,CAAC;MAACJ;IAAM,CAAC,EAChC;MACIA,MAAM,CAAE,cAAc,CAAC;IAC3B,CAAC;IACFK,cAAc,CAAC;MAACL;IAAM,CAAC,EAACV,KAAK,EAC7B;MACCU,MAAM,CAAC,aAAa,EAACV,KAAK,CAAC;IAE5B,CAAC;IACDgB,cAAc,CAAC;MAACN;IAAM,CAAC,EAACV,KAAK,EAC7B;MACCU,MAAM,CAAC,aAAa,EAACV,KAAK,CAAC;IAC5B;EACH,CAAC;EAEDiB,UAAU,EAAE;AAEZ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}